<!--{block return}-->
<!--{template common/header}-->

<!--{if $_GET['mobile'] && $_GET['mobile'] == 'no'}-->
<style>
.wp, #wp {
    min-width: 100% !important;
}
.wp {
    width: 100% !important;
}
</style>
<script>
var f = document.getElementById('nv_plugin');
var z = document.getElementById('hd');
var wp = document.getElementById('wp');
var trans = true;
f.removeChild(z);
wp.removeAttribute("style");
//绘制文字(得分和显示输赢)
function fillText(txt, x, y, style, font) {
    c.fillStyle = style || "white";
    c.font = font || "35px DejaVu Sans Mono";
    c.fillText(txt, x, y);
}
</script>
<canvas id="canvas">
    您的浏览器不支持Canvas！请更换浏览器！
</canvas>
<script>
var canvas = document.getElementById('canvas');
var c = canvas.getContext("2d");
var W = canvas.width = document.documentElement.clientWidth;
var H = canvas.height = document.documentElement.clientHeight;
</script>
<!--{else}-->
<div style="width:100%;height:100%;text-align:center;">
    <canvas id="canvas">
        您的浏览器不支持Canvas！请更换浏览器！
    </canvas>
</div>
<script>
var trans = false;
var canvas = document.getElementById('canvas');
var c = canvas.getContext("2d");
var W = canvas.width = 360;
var H = canvas.height = 640;
//绘制文字(得分和显示输赢)
function fillText(txt, x, y, style, font) {
    c.fillStyle = style || "white";
    c.font = font || "35px DejaVu Sans Mono";
    c.fillText(txt, x, y);
}
</script>
<!--{/if}-->
<script src="./source/plugin/sz/static/js/websocket.js"></script>
<script>
var name = "{$_G['username']}";
var uid = "{$_G['uid']}";
var token = "{$token}";
var bb = "{$score}";
var infoImg = null;
var exButton = null;
var tableImg = null;
var tableA = null;
var chal = null;
var roomuser = null;
var ingame = false;
var timer = 0;
var pics = {
    ob:null,
    src:'./source/plugin/sz/static/imgs/pics.png',
    s1:{
        x:0,
        y:460,
        w:88,
        h:95
    },
    s2:{
        x:88,
        y:460,
        w:88,
        h:95
    },
    s3:{
        x:176,
        y:460,
        w:88,
        h:95
    },
    s4:{
        x:0,
        y:555,
        w:88,
        h:95
    },
    s5:{
        x:88,
        y:555,
        w:88,
        h:95
    },
    s6:{
        x:176,
        y:555,
        w:88,
        h:95
    },
    as1:{
        x:386,
        y:792,
        w:88,
        h:95
    },
    as2:{
        x:474,
        y:792,
        w:88,
        h:95
    },
    as3:{
        x:562,
        y:792,
        w:88,
        h:95
    },
    as4:{
        x:386,
        y:887,
        w:88,
        h:95
    },
    as5:{
        x:474,
        y:887,
        w:88,
        h:95
    },
    as6:{
        x:562,
        y:887,
        w:88,
        h:95
    },
    b1:{
        x:655,
        y:5,
        w:170,
        h:95
    },
    b2:{
        x:655,
        y:100,
        w:170,
        h:95
    },
    b3:{
        x:655,
        y:195,
        w:170,
        h:95
    },
    b4:{
        x:655,
        y:290,
        w:170,
        h:95
    },
    b5:{
        x:655,
        y:385,
        w:170,
        h:95
    },
    b6:{
        x:655,
        y:485,
        w:170,
        h:95
    },
    b7:{
        x:655,
        y:579,
        w:170,
        h:95
    },
    b8:{
        x:655,
        y:675,
        w:170,
        h:95
    },
    b9:{
        x:655,
        y:770,
        w:170,
        h:95
    },
    b10:{
        x:655,
        y:865,
        w:170,
        h:95
    },
    ab1:{
        x:826,
        y:5,
        w:170,
        h:95
    },
    ab2:{
        x:826,
        y:100,
        w:170,
        h:95
    },
    ab3:{
        x:826,
        y:195,
        w:170,
        h:95
    },
    ab4:{
        x:826,
        y:290,
        w:170,
        h:95
    },
    ab5:{
        x:826,
        y:385,
        w:170,
        h:95
    },
    ab6:{
        x:827,
        y:485,
        w:170,
        h:95
    },
    ab7:{
        x:827,
        y:579,
        w:170,
        h:95
    },
    ab8:{
        x:827,
        y:675,
        w:170,
        h:95
    },
    ab9:{
        x:827,
        y:770,
        w:170,
        h:95
    },
    ab10:{
        x:827,
        y:865,
        w:170,
        h:95
    },
    startb:{
        x:0,
        y:650,
        w:260,
        h:85
    },
    astartb:{
        x:0,
        y:740,
        w:260,
        h:85
    },
    startb:{
        x:0,
        y:650,
        w:260,
        h:85
    },
    astartb:{
        x:0,
        y:740,
        w:260,
        h:85
    },
    zb:{
        x:0,
        y:825,
        w:170,
        h:85
    },
    azb:{
        x:0,
        y:915,
        w:170,
        h:85
    },
    bzb:{
        x:170,
        y:825,
        w:170,
        h:85
    },
    abzb:{
        x:170,
        y:915,
        w:170,
        h:85
    },
    zss:{
        x:324,
        y:443,
        w:336,
        h:330
    },
    zs:{
        x:320,
        y:0,
        w:340,
        h:465
    },
    zx:{
        x:0,
        y:0,
        w:320,
        h:465
    },
};

var game = {
    table:{
        w:W/2,
        h:H*0.91/4
    },
    sz:{
        w:W*0.14,
        h:W*0.14
    },
    b:{
        w:W*0.22,
        h:H*0.07
    },
    s1:{
        x:W*0.07,
        y:H*0.72,
    },
    s2:{
        x:W*0.21,
        y:H*0.72
    },
    s3:{
        x:W*0.35,
        y:H*0.72
    },
    s4:{
        x:W*0.15,
        y:H*0.8
    },
    s5:{
        x:W*0.3,
        y:H*0.8
    },
    b1:{
        x:W*0.54,
        y:H*0.64
    },
    b2:{
        x:W*0.54,
        y:H*0.7,
    },
    b3:{
        x:W*0.54,
        y:H*0.76
    },
    b4:{
        x:W*0.54,
        y:H*0.82
    },
    b5:{
        x:W*0.54,
        y:H*0.88
    },
    b6:{
        x:W*0.76,
        y:H*0.64
    },
    b7:{
        x:W*0.76,
        y:H*0.7
    },
    b8:{
        x:W*0.76,
        y:H*0.76
    },
    b9:{
        x:W*0.76,
        y:H*0.82
    },
    b10:{
        x:W*0.76,
        y:H*0.88
    },
    startb:{
        x:W*0.54,
        y:H*0.57,
        w:W*0.44,
        h:H*0.07
    },
    zb:{
        x:W*0.64,
        y:H*0.75,
        w:W*0.24,
        h:H*0.07
    },
    bzb:{
        x:W*0.64,
        y:H*0.65,
        w:W*0.24,
        h:H*0.07
    },
    sb:{
        sz1:{
            x:W*0.58,
            y:H*0.6
        },
        sz2:{
            x:W*0.78,
            y:H*0.6
        },
        sz3:{
            x:W*0.58,
            y:H*0.7
        },
        sz4:{
            x:W*0.78,
            y:H*0.7
        },
        sz5:{
            x:W*0.58,
            y:H*0.8
        },
        sz6:{
            x:W*0.78,
            y:H*0.8
        },
    },
    sr:{
        sz1:{
            x:W*0.07,
            y:H*0.09
        },
        sz2:{
            x:W*0.21,
            y:H*0.09
        },
        sz3:{
            x:W*0.35,
            y:H*0.09
        },
        sz4:{
            x:W*0.15,
            y:H*0.17
        },
        sz5:{
            x:W*0.3,
            y:H*0.17
        },
    },
    zss:{
        x:0,
        y:0,
        w:W*0.55,
        h:H*0.31
    },
    zs:{
        x:0,
        y:0,
        w:W*0.55,
        h:H*0.46
    },
    zx:{
        x:0,
        y:H*0.47,
        w:W*0.55,
        h:H*0.46
    },
};
var loading = true;
var hide = false;
drawLoad();
var nogameN = null;
var ingameN = null;
var ingameSz = null;
var sz = null;
var esz = null;
var gameover = false;
var incall = false;
var sz_num = null;
var sz_t = null;
var zhai = null;
var lastCall = '';
<!-- ui(); -->
<!-- function drawPiece(ob, a, b, c, g, x, y, w, h) { -->
    <!-- c.drawImage(ob, a, b, c, g, x, y, w, h); -->
<!-- } -->
function drawLoad() {
    fillRect(0, 0, W, H, '#000');
    fillText('加载中…', W*0.3, H*0.5, "white", "60px DejaVu Sans Mono");
}
function drawWait() {
    fillRect(0, 0, W, H, '#000');
    fillText('等待对手！', W*0.3, H*0.5, "white", "60px DejaVu Sans Mono");
}
function game_refresh() {
    if (!ingame) {
        deskui();
    }else {
        gameui();
    }
}
function start() {
    canvas.addEventListener("mousemove",doMouseMove,false);
    canvas.addEventListener("mousedown",doMouseDown,false);
}
function doMouseMove(e) {
    if (loading){return;}
    let now;
    let innow;
    let sznow;
    let znow;
    if (!ingame) {
        if (e.layerX > W*0.8 && e.layerX < W*0.8 + W*0.2 && e.layerY > H*0.005 && e.layerY < H*0.08) {
            now = 0;
        }else if (e.layerX > 0 && e.layerX < W && e.layerY > H*0.09 && e.layerY < H) {
            now = parseInt((e.layerY - H*0.09)/game.table.h)*2 + parseInt((e.layerX - H*0.09)/game.table.w) + 1;
            if (roomuser[now-1][1]) {
                now = null;
            }
        }else {
            now = null;
        }
        if (now != nogameN) { 
            nogameN = now;
            game_refresh();
        }
    }else {
        if (!sz_num) {
            if (e.layerX > game.startb.x && e.layerX < game.startb.x + game.startb.w && e.layerY > game.startb.y && e.layerY < game.startb.y + game.startb.h) {
                innow = 0;
            }else if (e.layerX > game.b1.x && e.layerX < game.b1.x + game.b.w*2 && e.layerY > game.b1.y && e.layerY < game.b1.y + H*0.3) {
                innow = parseInt((e.layerY - game.b1.y)/(H*0.06)) + parseInt((e.layerX - game.b1.x)/game.b.w)*5 + 1;
            }else {
                innow = null;
            }
            if (innow != ingameN) { 
                ingameN = innow;
                game_refresh();
            }
        }else if (!sz_t) {
            if (e.layerX > game.sb.sz1.x && e.layerX < game.sb.sz1.x + game.sz.w && e.layerY > game.sb.sz1.y && e.layerY < game.sb.sz1.y + game.sz.h) {
                sznow = 1;
            }else if(e.layerX > game.sb.sz2.x && e.layerX < game.sb.sz2.x + game.sz.w && e.layerY > game.sb.sz2.y && e.layerY < game.sb.sz2.y + game.sz.h) {
                sznow = 2;
            }else if(e.layerX > game.sb.sz3.x && e.layerX < game.sb.sz3.x + game.sz.w && e.layerY > game.sb.sz3.y && e.layerY < game.sb.sz3.y + game.sz.h) {
                sznow = 3;
            }else if(e.layerX > game.sb.sz4.x && e.layerX < game.sb.sz4.x + game.sz.w && e.layerY > game.sb.sz4.y && e.layerY < game.sb.sz4.y + game.sz.h) {
                sznow = 4;
            }else if(e.layerX > game.sb.sz5.x && e.layerX < game.sb.sz5.x + game.sz.w && e.layerY > game.sb.sz5.y && e.layerY < game.sb.sz5.y + game.sz.h) {
                sznow = 5;
            }else if(e.layerX > game.sb.sz6.x && e.layerX < game.sb.sz6.x + game.sz.w && e.layerY > game.sb.sz6.y && e.layerY < game.sb.sz6.y + game.sz.h) {
                sznow = 6;
            }else {
                sznow = null;
            }
            if (sznow != ingameSz) { 
                ingameSz = sznow;
                game_refresh();
            }
        }else {
            if(e.layerX > game.zb.x && e.layerX < game.zb.x + game.zb.w && e.layerY > game.zb.y && e.layerY < game.zb.y + game.zb.h) {
                znow = 1;
            }else if(e.layerX > game.bzb.x && e.layerX < game.bzb.x + game.bzb.w && e.layerY > game.bzb.y && e.layerY < game.bzb.y + game.bzb.h && sz_t != 1) {
                znow = 0;
            }else {
                znow = null;
            }
            if (znow != zhai) {
                zhai = znow;
                game_refresh();
            }
        }
    }
}
function doMouseDown(e) {
    if (gameover) {
        if (trans) {
            window.location = "./plugin.php?" + encodeURI("id=sz:game&mobile=no");
        }else {
            window.location = "./plugin.php?id=sz:game";
        }
    }
    if (loading){return;}
    if (!ingame) {
        if (nogameN == null) {return;}
        if (nogameN == 0) {
            if (trans) {
                window.location = "./home.php?" + encodeURI("mod=spacecp&ac=credit&op=exchange&mobile=2");
            }else {
                window.location = "./home.php?" + encodeURI("mod=spacecp&ac=credit&op=exchange");
            }
        }else if(!hide) {
            send('join', nogameN - 1);
            loading = true;
            <!-- drawLoad(); -->
        }
    }else if (!sz_num && incall){
        if (ingameN == null) {return;}
        if (ingameN == 0) {
            send('show', '');
            loading = true;
            return;
        }
        sz_num = ingameN;
        game_refresh();
    }else if (!sz_t){
        if (ingameSz == null) {return;}
        sz_t = ingameSz;
        game_refresh();
    }else {
        if (zhai == null) {return;}
        let m = sz_num + ' ';
        m += ingameSz;
        m += ' ';
        m += zhai;
        send('call', m);
        lastCall = m;
        timer = 30;
        loading = true;
        incall = false;
        game_refresh();
    }
}
function drawCall() {
    if (lastCall != '你赢了！' && lastCall != '你输了~' && lastCall != '叫太小啦！') {
        let m = lastCall.split(' ');
        let n = '';
        if (m[2] == '1') {
            n = '摘！';
        }else {
            n = '不摘！';
        }
        let msg = m[0] + '个' + m[1] + n;
        fillText(msg, W*0.5, H*0.45);
    }else {
        fillText(lastCall, W*0.5, H*0.45);
    }
}
function draw_img(object, src, x, y, w, h) {
    object = new Image();
    object.src = src;
    object.onload = function () {
        c.drawImage(object, x, y, w, h);
    }
}
function load_table(x, y, a) {
    if (roomuser[a][0]) {
        draw_img(chal, "./source/plugin/transaction/head_pic.gif", x, y + game.table.h/2, game.table.w/4, game.table.h/2);
    }else {
        draw_img(chal, "./source/plugin/transaction/bench_l.png", x, y + game.table.h/2, game.table.w/4, game.table.h/2);
    }
    
    if (a + 1 == nogameN) {
        draw_img(tableA, "./source/plugin/transaction/table_a.png", x + game.table.w/4, y, game.table.w/2,  game.table.h);
    }else {
        draw_img(tableImg, "./source/plugin/transaction/table.png", x + game.table.w/4, y, game.table.w/2,  game.table.h);
    }
    
    if (roomuser[a][1]) {
        draw_img(chal, "./source/plugin/transaction/head_pic.gif", x + game.table.w*3/4, y + game.table.h/2, game.table.w/4, game.table.h/2);
    }else {
        draw_img(tableImg, "./source/plugin/transaction/bench_r.png", x + game.table.w*3/4, y + game.table.h/2, game.table.w/4, game.table.h/2);
    }
}
function all_table(number) {
    var x = 0, y = H*0.09;
    for (i = 0; i < number; i++) {
        if (i%2 == 0 && i != 0) {
            x = 0;
            y += game.table.h;
        }
        load_table(x, y, i);
        x += game.table.w;
    }
}
function deskui() {
    fillRect(0, 0, W, H, '#000');
    fillRect(0, 0, W, H*0.09, '#00223b');//头背景
    drawInfo();
    if (hide) {
        fillText('博币不足10', W*0.1, H*0.5, "white", "60px DejaVu Sans Mono");
        return;
    }
    all_table(8);
}
function gameui() {
    fillRect(0, 0, W, H, '#000');//背景色
    if (!gameover) {
        drawZs();
        drawTimer();
    }else {
        drawTip();
        drawZss();
        drawEsz();
    }
    drawZx();
    drawMsz();
    if (incall) {
        if (!sz_num) {
            drawBt();
        }else if (!sz_t){
            drawSz();
        }else {
            drawZb();
        }
    }
    if (lastCall != '') {
        drawCall();
    }
}
function drawEsz() {
    switch(esz[0]){
        case 1:
            drawS1(game.sr.sz1.x, game.sr.sz1.y);
            break;
        case 2:
            drawS2(game.sr.sz1.x, game.sr.sz1.y);
            break;
        case 3:
            drawS3(game.sr.sz1.x, game.sr.sz1.y);
            break;
        case 4:
            drawS4(game.sr.sz1.x, game.sr.sz1.y);
            break;
        case 5:
            drawS5(game.sr.sz1.x, game.sr.sz1.y);
            break;
        case 6:
            drawS6(game.sr.sz1.x, game.sr.sz1.y);
            break;
        default:
            break;
    }
    switch(esz[1]){
        case 1:
            drawS1(game.sr.sz2.x, game.sr.sz2.y);
            break;
        case 2:
            drawS2(game.sr.sz2.x, game.sr.sz2.y);
            break;
        case 3:
            drawS3(game.sr.sz2.x, game.sr.sz2.y);
            break;
        case 4:
            drawS4(game.sr.sz2.x, game.sr.sz2.y);
            break;
        case 5:
            drawS5(game.sr.sz2.x, game.sr.sz2.y);
            break;
        case 6:
            drawS6(game.sr.sz2.x, game.sr.sz2.y);
            break;
        default:
            break;
    }
    switch(esz[2]){
        case 1:
            drawS1(game.sr.sz3.x, game.sr.sz3.y);
            break;
        case 2:
            drawS2(game.sr.sz3.x, game.sr.sz3.y);
            break;
        case 3:
            drawS3(game.sr.sz3.x, game.sr.sz3.y);
            break;
        case 4:
            drawS4(game.sr.sz3.x, game.sr.sz3.y);
            break;
        case 5:
            drawS5(game.sr.sz3.x, game.sr.sz3.y);
            break;
        case 6:
            drawS6(game.sr.sz3.x, game.sr.sz3.y);
            break;
        default:
            break;
    }
    switch(esz[3]){
        case 1:
            drawS1(game.sr.sz4.x, game.sr.sz4.y);
            break;
        case 2:
            drawS2(game.sr.sz4.x, game.sr.sz4.y);
            break;
        case 3:
            drawS3(game.sr.sz4.x, game.sr.sz4.y);
            break;
        case 4:
            drawS4(game.sr.sz4.x, game.sr.sz4.y);
            break;
        case 5:
            drawS5(game.sr.sz4.x, game.sr.sz4.y);
            break;
        case 6:
            drawS6(game.sr.sz4.x, game.sr.sz4.y);
            break;
        default:
            break;
    }
    switch(esz[4]){
        case 1:
            drawS1(game.sr.sz5.x, game.sr.sz5.y);
            break;
        case 2:
            drawS2(game.sr.sz5.x, game.sr.sz5.y);
            break;
        case 3:
            drawS3(game.sr.sz5.x, game.sr.sz5.y);
            break;
        case 4:
            drawS4(game.sr.sz5.x, game.sr.sz5.y);
            break;
        case 5:
            drawS5(game.sr.sz5.x, game.sr.sz5.y);
            break;
        case 6:
            drawS6(game.sr.sz5.x, game.sr.sz5.y);
            break;
        default:
            break;
    }
}
function drawMsz() {
    switch(sz[0]){
        case 1:
            drawS1(game.s1.x, game.s1.y);
            break;
        case 2:
            drawS2(game.s1.x, game.s1.y);
            break;
        case 3:
            drawS3(game.s1.x, game.s1.y);
            break;
        case 4:
            drawS4(game.s1.x, game.s1.y);
            break;
        case 5:
            drawS5(game.s1.x, game.s1.y);
            break;
        case 6:
            drawS6(game.s1.x, game.s1.y);
            break;
        default:
            break;
    }
    switch(sz[1]){
        case 1:
            drawS1(game.s2.x, game.s2.y);
            break;
        case 2:
            drawS2(game.s2.x, game.s2.y);
            break;
        case 3:
            drawS3(game.s2.x, game.s2.y);
            break;
        case 4:
            drawS4(game.s2.x, game.s2.y);
            break;
        case 5:
            drawS5(game.s2.x, game.s2.y);
            break;
        case 6:
            drawS6(game.s2.x, game.s2.y);
            break;
        default:
            break;
    }
    switch(sz[2]){
        case 1:
            drawS1(game.s3.x, game.s3.y);
            break;
        case 2:
            drawS2(game.s3.x, game.s3.y);
            break;
        case 3:
            drawS3(game.s3.x, game.s3.y);
            break;
        case 4:
            drawS4(game.s3.x, game.s3.y);
            break;
        case 5:
            drawS5(game.s3.x, game.s3.y);
            break;
        case 6:
            drawS6(game.s3.x, game.s3.y);
            break;
        default:
            break;
    }
    switch(sz[3]){
        case 1:
            drawS1(game.s4.x, game.s4.y);
            break;
        case 2:
            drawS2(game.s4.x, game.s4.y);
            break;
        case 3:
            drawS3(game.s4.x, game.s4.y);
            break;
        case 4:
            drawS4(game.s4.x, game.s4.y);
            break;
        case 5:
            drawS5(game.s4.x, game.s4.y);
            break;
        case 6:
            drawS6(game.s4.x, game.s4.y);
            break;
        default:
            break;
    }
    switch(sz[4]){
        case 1:
            drawS1(game.s5.x, game.s5.y);
            break;
        case 2:
            drawS2(game.s5.x, game.s5.y);
            break;
        case 3:
            drawS3(game.s5.x, game.s5.y);
            break;
        case 4:
            drawS4(game.s5.x, game.s5.y);
            break;
        case 5:
            drawS5(game.s5.x, game.s5.y);
            break;
        case 6:
            drawS6(game.s5.x, game.s5.y);
            break;
        default:
            break;
    }
}
function drawInfo() {
    draw_img(infoImg, "./uc_server/avatar.php?uid={$_G['uid']}&amp;size=small", H*0.005, H*0.005, H*0.08, H*0.08);
    fillText("博币：" + bb, W*0.16, H*0.07, "#FFD700", "35px DejaVu Sans Mono");
    if (nogameN == 0) {
        draw_img(exButton, "./source/plugin/transaction/ex_a.png", W*0.8, H*0.005, W*0.2, H*0.08);
    }else {
        draw_img(exButton, "./source/plugin/transaction/ex.png", W*0.8, H*0.005, W*0.2, H*0.08);
    }
}
function drawZss() {
    c.drawImage(pics.ob, pics.zss.x, pics.zss.y, pics.zss.w, pics.zss.h, game.zss.x, game.zss.y, game.zss.w, game.zss.h);
}
function drawZs() {
    c.drawImage(pics.ob, pics.zs.x, pics.zs.y, pics.zs.w, pics.zs.h, game.zs.x, game.zs.y, game.zs.w, game.zs.h);
}
function drawZx() {
    c.drawImage(pics.ob, pics.zx.x, pics.zx.y, pics.zx.w, pics.zx.h, game.zx.x, game.zx.y, game.zx.w, game.zx.h);
}
function drawS1(x, y) {
    c.drawImage(pics.ob, pics.s1.x, pics.s1.y, pics.s1.w, pics.s1.h, x, y, game.sz.w, game.sz.h);
}
function drawS2(x, y) {
    c.drawImage(pics.ob, pics.s2.x, pics.s2.y, pics.s2.w, pics.s2.h, x, y, game.sz.w, game.sz.h);
}
function drawS3(x, y) {
    c.drawImage(pics.ob, pics.s3.x, pics.s3.y, pics.s3.w, pics.s3.h, x, y, game.sz.w, game.sz.h);
}
function drawS4(x, y) {
    c.drawImage(pics.ob, pics.s4.x, pics.s4.y, pics.s4.w, pics.s4.h, x, y, game.sz.w, game.sz.h);
}
function drawS5(x, y) {
    c.drawImage(pics.ob, pics.s5.x, pics.s5.y, pics.s5.w, pics.s5.h, x, y, game.sz.w, game.sz.h);
}
function drawS6(x, y) {
    c.drawImage(pics.ob, pics.s6.x, pics.s6.y, pics.s6.w, pics.s6.h, x, y, game.sz.w, game.sz.h);
}
function drawBt() {
    c.drawImage(pics.ob, pics.startb.x, pics.startb.y, pics.startb.w, pics.startb.h, game.startb.x, game.startb.y, game.startb.w, game.startb.h);
    c.drawImage(pics.ob, pics.b1.x, pics.b1.y, pics.b1.w, pics.b1.h, game.b1.x, game.b1.y, game.b.w, game.b.h);
    c.drawImage(pics.ob, pics.b2.x, pics.b2.y, pics.b2.w, pics.b2.h, game.b2.x, game.b2.y, game.b.w, game.b.h);
    c.drawImage(pics.ob, pics.b3.x, pics.b3.y, pics.b3.w, pics.b3.h, game.b3.x, game.b3.y, game.b.w, game.b.h);
    c.drawImage(pics.ob, pics.b4.x, pics.b4.y, pics.b4.w, pics.b4.h, game.b4.x, game.b4.y, game.b.w, game.b.h);
    c.drawImage(pics.ob, pics.b5.x, pics.b5.y, pics.b5.w, pics.b5.h, game.b5.x, game.b5.y, game.b.w, game.b.h);
    c.drawImage(pics.ob, pics.b6.x, pics.b6.y, pics.b6.w, pics.b6.h, game.b6.x, game.b6.y, game.b.w, game.b.h);
    c.drawImage(pics.ob, pics.b7.x, pics.b7.y, pics.b7.w, pics.b7.h, game.b7.x, game.b7.y, game.b.w, game.b.h);
    c.drawImage(pics.ob, pics.b8.x, pics.b8.y, pics.b8.w, pics.b8.h, game.b8.x, game.b8.y, game.b.w, game.b.h);
    c.drawImage(pics.ob, pics.b9.x, pics.b9.y, pics.b9.w, pics.b9.h, game.b9.x, game.b9.y, game.b.w, game.b.h);
    c.drawImage(pics.ob, pics.b10.x, pics.b10.y, pics.b10.w, pics.b10.h, game.b10.x, game.b10.y, game.b.w, game.b.h);
    switch(ingameN){
        case 0:
            c.drawImage(pics.ob, pics.astartb.x, pics.astartb.y, pics.astartb.w, pics.astartb.h, game.startb.x, game.startb.y, game.startb.w, game.startb.h);
            break;
        case 1:
            c.drawImage(pics.ob, pics.ab1.x, pics.ab1.y, pics.ab1.w, pics.ab1.h, game.b1.x, game.b1.y, game.b.w, game.b.h);
            break;
        case 2:
            c.drawImage(pics.ob, pics.ab2.x, pics.ab2.y, pics.ab2.w, pics.ab2.h, game.b2.x, game.b2.y, game.b.w, game.b.h);
            break;
        case 3:
            c.drawImage(pics.ob, pics.ab3.x, pics.ab3.y, pics.ab3.w, pics.ab3.h, game.b3.x, game.b3.y, game.b.w, game.b.h);
            break;
        case 4:
            c.drawImage(pics.ob, pics.ab4.x, pics.ab4.y, pics.ab4.w, pics.ab4.h, game.b4.x, game.b4.y, game.b.w, game.b.h);
            break;
        case 5:
            c.drawImage(pics.ob, pics.ab5.x, pics.ab5.y, pics.ab5.w, pics.ab5.h, game.b5.x, game.b5.y, game.b.w, game.b.h);
            break;
        case 6:
            c.drawImage(pics.ob, pics.ab6.x, pics.ab6.y, pics.ab6.w, pics.ab6.h, game.b6.x, game.b6.y, game.b.w, game.b.h);
            break;
        case 7:
            c.drawImage(pics.ob, pics.ab7.x, pics.ab7.y, pics.ab7.w, pics.ab7.h, game.b7.x, game.b7.y, game.b.w, game.b.h);
            break;
        case 8:
            c.drawImage(pics.ob, pics.ab8.x, pics.ab8.y, pics.ab8.w, pics.ab8.h, game.b8.x, game.b8.y, game.b.w, game.b.h);
            break;
        case 9:
            c.drawImage(pics.ob, pics.ab9.x, pics.ab9.y, pics.ab9.w, pics.ab9.h, game.b9.x, game.b9.y, game.b.w, game.b.h);
            break;
        case 10:
            c.drawImage(pics.ob, pics.ab10.x, pics.ab10.y, pics.ab10.w, pics.ab10.h, game.b10.x, game.b10.y, game.b.w, game.b.h);
            break;
    }
}
function drawZb() {
    if (sz_t == 1) {
        c.drawImage(pics.ob, pics.zb.x, pics.zb.y, pics.zb.w, pics.zb.h, game.zb.x, game.zb.y, game.zb.w, game.zb.h);
    }else {
        c.drawImage(pics.ob, pics.bzb.x, pics.bzb.y, pics.bzb.w, pics.bzb.h, game.bzb.x, game.bzb.y, game.bzb.w, game.bzb.h);
        c.drawImage(pics.ob, pics.zb.x, pics.zb.y, pics.zb.w, pics.zb.h, game.zb.x, game.zb.y, game.zb.w, game.zb.h);
    }
    
    if (zhai == 0 && sz_t != 1) {
        c.drawImage(pics.ob, pics.abzb.x, pics.abzb.y, pics.abzb.w, pics.abzb.h, game.bzb.x, game.bzb.y, game.bzb.w, game.bzb.h);
    }else if (zhai == 1) {
        c.drawImage(pics.ob, pics.azb.x, pics.azb.y, pics.azb.w, pics.azb.h, game.zb.x, game.zb.y, game.zb.w, game.zb.h);
    }
}
function drawSz() {
    c.drawImage(pics.ob, pics.s1.x, pics.s1.y, pics.s1.w, pics.s1.h, game.sb.sz1.x, game.sb.sz1.y, game.sz.w, game.sz.h);
    c.drawImage(pics.ob, pics.s2.x, pics.s2.y, pics.s2.w, pics.s2.h, game.sb.sz2.x, game.sb.sz2.y, game.sz.w, game.sz.h);
    c.drawImage(pics.ob, pics.s3.x, pics.s3.y, pics.s3.w, pics.s3.h, game.sb.sz3.x, game.sb.sz3.y, game.sz.w, game.sz.h);
    c.drawImage(pics.ob, pics.s4.x, pics.s4.y, pics.s4.w, pics.s4.h, game.sb.sz4.x, game.sb.sz4.y, game.sz.w, game.sz.h);
    c.drawImage(pics.ob, pics.s5.x, pics.s5.y, pics.s5.w, pics.s5.h, game.sb.sz5.x, game.sb.sz5.y, game.sz.w, game.sz.h);
    c.drawImage(pics.ob, pics.s6.x, pics.s6.y, pics.s6.w, pics.s6.h, game.sb.sz6.x, game.sb.sz6.y, game.sz.w, game.sz.h);
    
    switch(ingameSz){
        case 1:
            c.drawImage(pics.ob, pics.as1.x, pics.as1.y, pics.as1.w, pics.as1.h, game.sb.sz1.x, game.sb.sz1.y, game.sz.w, game.sz.h);
            break;
        case 2:
            c.drawImage(pics.ob, pics.as2.x, pics.as2.y, pics.as2.w, pics.as2.h, game.sb.sz2.x, game.sb.sz2.y, game.sz.w, game.sz.h);
            break;
        case 3:
            c.drawImage(pics.ob, pics.as3.x, pics.as3.y, pics.as3.w, pics.as3.h, game.sb.sz3.x, game.sb.sz3.y, game.sz.w, game.sz.h);
            break;
        case 4:
            c.drawImage(pics.ob, pics.as4.x, pics.as4.y, pics.as4.w, pics.as4.h, game.sb.sz4.x, game.sb.sz4.y, game.sz.w, game.sz.h);
            break;
        case 5:
            c.drawImage(pics.ob, pics.as5.x, pics.as5.y, pics.as5.w, pics.as5.h, game.sb.sz5.x, game.sb.sz5.y, game.sz.w, game.sz.h);
            break;
        case 6:
            c.drawImage(pics.ob, pics.as6.x, pics.as6.y, pics.as6.w, pics.as6.h, game.sb.sz6.x, game.sb.sz6.y, game.sz.w, game.sz.h);
            break;
    }
}
function drawTip() {
    fillText('点击返回', W*0.5, H*0.3, "#FFD700");
}
function drawTimer() {
    fillText(timer, W*0.6, H*0.3, "#FFD700");
}

function auth(){
    var msg,sys,m;
    sys = 'login';
    m = {'sys':sys,"name":name,"uid":uid,"token":token};
    msg = JSON.stringify(m);
    try{ log('Sent: '+msg); socket.send(msg);} catch(ex){ log(ex); }
}

function received(msg) {
    var data = JSON.parse(msg);
    if (data.sys == 'login') {
        if (data.msg == 'success') {
            pics.ob = new Image();
            pics.ob.src = pics.src;
            pics.ob.onload = function () {
                start();
                loading = false;
                game_refresh();
            }
        }
        return;
    }
    if (data.sys == 'all') {
        roomuser = data.msg;
        game_refresh();
        return;
    }
    if (data.sys == 'wait') {
        drawWait();
        return;
    }
    if (data.sys == 'start') {
        loading = false;
        ingame = true;
        if (data.msg == 'call') {
            incall = true;
        }else {
            incall = false;
        }
        timer = 30;
        counter = setInterval("count()", 1000);
        game_refresh();
        return;
    }
    if (data.sys == 'sz') {
        sz = data.msg.split(" ");
        sz.forEach(function(item, index) {
            sz[index] = parseInt(item);
        });
        game_refresh();
        return;
    }
    if (data.sys == 'call') {
        timer = 30;
        incall = true;
        sz_num = null;
        sz_t = null;
        zhai = null;
        loading = false;
        lastCall = data.msg;
        game_refresh();
        return;
    }
    if (data.sys == 'cant') {
        lastCall = '叫太小啦！';
        timer = parseInt(data.msg);
        incall = true;
        sz_num = null;
        sz_t = null;
        zhai = null;
        loading = false;
        game_refresh();
        return;
    }
    if (data.sys == 'result') {
        esz = data.msg.split(" ");
        esz.forEach(function(item, index) {
            esz[index] = parseInt(item);
        });
        gameover = true;
        clearInterval(counter);
        game_refresh();
        return;
    }
    if (data.sys == 'winner') {
        if (data.msg == 'win') {
            lastCall = '你赢了！';
        }else if (data.msg == 'lose') {
            lastCall = '你输了~';
        }
        return;
    }
    if (data.sys == 'score') {
        loading = false;
        hide = true;
        game_refresh();
        return;
    }
    if (data.sys == 'timeover') {
        lastCall = '1 1 1';
        timer = 30;
        return;
    }
    if (data.sys == 'reconn') {
        pics.ob = new Image();
        pics.ob.src = pics.src;
        pics.ob.onload = function () {
            start();
            loading = false;
            var m = JSON.parse(data.msg);
            sz = m.msg.split(" ");
            sz.forEach(function(item, index) {
                sz[index] = parseInt(item);
            });
            if (m.call == 'call') {
                incall = true;
            }else {
                incall = false;
            }
            lastCall = m.last;
            timer = parseInt(m.time);
            ingame = true;
            counter = setInterval("count()", 1000);
            game_refresh();
        }
        return;
    }
}

function count() {
    timer -= 1;
    if (timer < 0) {
        timer = 0;
        send('timeover', '');
        loading = true;
        incall = false;
    }
    game_refresh();
}

function onopen() {
    auth();
}

function diccon(){
    console.log('test');
    location.reload();
}

function fillLine(s, e, w, style) {
    c.fillStyle = style || "white";
    c.beginPath();
    c.moveTo(s.x, s.y);
    c.lineTo(e.x, e.y);
    c.lineWidth = w;
    c.strokeStyle = style;
    c.stroke();
}
//绘制长方形(也就是控制板)
function fillRect(x, y, w, h, style) {
    c.fillStyle = style;
    c.fillRect(x, y, w, h);
}
//绘制圆(也就是游戏中的球)
function fillCircle(x, y, r, style) {
    c.fillStyle = style;
    c.beginPath();
    c.arc(x, y, r, 0, Math.PI * 2);
    c.fill();
}

</script>
<!--{/block}-->